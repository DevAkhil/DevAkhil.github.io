{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ak_PC\\\\Downloads\\\\trydo\\\\src\\\\blocks\\\\ProjectList.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport Project from \"./Project\";\nimport sanityClient from \"../client.js\";\n\nconst ProjectList = () => {\n  const [ProjectList, setProjectList] = useState(null);\n  useEffect(() => {\n    sanityClient.fetch(`*[_type==\"post\"]{\n          title,\n          description,\n          technologies,\n          hasVideo,\n          videoID,\n          gitURL,\n          liveURL,\n          features,\n          \n\n          mainImage{\n              asset->{\n                  _id,\n                  url\n              },\n              alt\n          }\n      }`).then(data => setProjectList(data)).catch(console.error);\n  }, []);\n  console.log(ProjectList);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, ProjectList && ProjectList.map((project, index) => /*#__PURE__*/React.createElement(MajorProject, Object.assign({\n    key: index\n  }, project, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default ProjectList;","map":{"version":3,"names":["React","useState","useEffect","Project","sanityClient","ProjectList","setProjectList","fetch","then","data","catch","console","error","log","map","project","index"],"sources":["C:/Users/Ak_PC/Downloads/trydo/src/blocks/ProjectList.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Project from \"./Project\";\r\nimport sanityClient from \"../client.js\";\r\n\r\nconst ProjectList = () => {\r\n  const [ProjectList, setProjectList] = useState(null);\r\n  useEffect(() => {\r\n    sanityClient\r\n      .fetch(\r\n        `*[_type==\"post\"]{\r\n          title,\r\n          description,\r\n          technologies,\r\n          hasVideo,\r\n          videoID,\r\n          gitURL,\r\n          liveURL,\r\n          features,\r\n          \r\n\r\n          mainImage{\r\n              asset->{\r\n                  _id,\r\n                  url\r\n              },\r\n              alt\r\n          }\r\n      }`\r\n      )\r\n      .then((data) => setProjectList(data))\r\n      .catch(console.error);\r\n  }, []);\r\n  console.log(ProjectList);\r\n  return (\r\n    <React.Fragment>\r\n      {ProjectList &&\r\n        ProjectList.map((project, index) => (\r\n          <MajorProject key={index} {...project} />\r\n        ))}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,cAAzB;;AAEA,MAAMC,WAAW,GAAG,MAAM;EACxB,MAAM,CAACA,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,IAAD,CAA9C;EACAC,SAAS,CAAC,MAAM;IACdE,YAAY,CACTG,KADH,CAEK;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QApBI,EAsBGC,IAtBH,CAsBSC,IAAD,IAAUH,cAAc,CAACG,IAAD,CAtBhC,EAuBGC,KAvBH,CAuBSC,OAAO,CAACC,KAvBjB;EAwBD,CAzBQ,EAyBN,EAzBM,CAAT;EA0BAD,OAAO,CAACE,GAAR,CAAYR,WAAZ;EACA,oBACE,oBAAC,KAAD,CAAO,QAAP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGA,WAAW,IACVA,WAAW,CAACS,GAAZ,CAAgB,CAACC,OAAD,EAAUC,KAAV,kBACd,oBAAC,YAAD;IAAc,GAAG,EAAEA;EAAnB,GAA8BD,OAA9B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GADF,CAFJ,CADF;AAQD,CArCD;;AAuCA,eAAeV,WAAf"},"metadata":{},"sourceType":"module"}