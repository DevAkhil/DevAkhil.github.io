{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ak_PC\\\\Downloads\\\\trydo\\\\src\\\\blocks\\\\GraphicList.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport sanityClient from \"../client.js\";\nimport Graphic from \"./Graphic.jsx\";\n\nconst GraphicList = () => {\n  const [graphicData, setGraphicData] = useState(null);\n  useEffect(() => {\n    sanityClient.fetch(`*[_type==\"graphic\"]\n{\n  \n            title,\n            company,\n            software,\n        \n          mainImage{\n              asset->{\n                  _id,\n                  url\n              },\n              alt\n          }\n  \n}`).then(data => setGraphicData(data)).catch(console.error);\n  }, []);\n  console.log(graphicData);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, graphicData && graphicData.map((value, index) => /*#__PURE__*/React.createElement(Graphic, {\n    key: index,\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default GraphicList;","map":{"version":3,"names":["React","useState","useEffect","sanityClient","Graphic","GraphicList","graphicData","setGraphicData","fetch","then","data","catch","console","error","log","map","value","index"],"sources":["C:/Users/Ak_PC/Downloads/trydo/src/blocks/GraphicList.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport sanityClient from \"../client.js\";\r\nimport Graphic from \"./Graphic.jsx\";\r\n\r\nconst GraphicList = () => {\r\n  const [graphicData, setGraphicData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    sanityClient\r\n      .fetch(\r\n        `*[_type==\"graphic\"]\r\n{\r\n  \r\n            title,\r\n            company,\r\n            software,\r\n        \r\n          mainImage{\r\n              asset->{\r\n                  _id,\r\n                  url\r\n              },\r\n              alt\r\n          }\r\n  \r\n}`\r\n      )\r\n      .then((data) => setGraphicData(data))\r\n      .catch(console.error);\r\n  }, []);\r\n\r\n  console.log(graphicData);\r\n  return (\r\n    <React.Fragment>\r\n      {graphicData &&\r\n        graphicData.map((value, index) => (\r\n          <Graphic key={index} value={value} />\r\n        ))}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default GraphicList;\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,OAAOC,OAAP,MAAoB,eAApB;;AAEA,MAAMC,WAAW,GAAG,MAAM;EACxB,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,IAAD,CAA9C;EAEAC,SAAS,CAAC,MAAM;IACdC,YAAY,CACTK,KADH,CAEK;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAjBI,EAmBGC,IAnBH,CAmBSC,IAAD,IAAUH,cAAc,CAACG,IAAD,CAnBhC,EAoBGC,KApBH,CAoBSC,OAAO,CAACC,KApBjB;EAqBD,CAtBQ,EAsBN,EAtBM,CAAT;EAwBAD,OAAO,CAACE,GAAR,CAAYR,WAAZ;EACA,oBACE,oBAAC,KAAD,CAAO,QAAP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGA,WAAW,IACVA,WAAW,CAACS,GAAZ,CAAgB,CAACC,KAAD,EAAQC,KAAR,kBACd,oBAAC,OAAD;IAAS,GAAG,EAAEA,KAAd;IAAqB,KAAK,EAAED,KAA5B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,CAFJ,CADF;AAQD,CApCD;;AAsCA,eAAeX,WAAf"},"metadata":{},"sourceType":"module"}